<project>

	<!-- Do not download anything if the target directory was not "cleaned" -->
	<target name="target.check" description="Checking if the web-administration was already cloned...">
		<condition property="already.cloned">
			<available file="${project.build.directory}/roboconf-web-administration" />
		</condition>
	</target>
	
	<!-- Which download to perform depends on the project's version -->
	<target name="target.is.snapshot" description="Checking if the platform is in snapshot version...">
		<condition property="roboconf.snapshot">
			<matches string="${project.version}" casesensitive="false" pattern=".*-SNAPSHOT$" />
		</condition>
	</target>

	<!-- Get the right version, if available -->
	<target name="target.get" depends="target.check, target.is.snapshot" unless="already.cloned" description="Selecting the web-administration version...">
		<antcall target="target.get.snapshot" />
		<antcall target="target.get.release" />
	</target>

	<!-- Get the last snapshot -->
	<target name="target.get.snapshot" if="roboconf.snapshot" description="Downloading the last built distribution...">
		<get src="https://dl.bintray.com/roboconf/roboconf-web-administration/all/roboconf-web-administration-snapshot.zip" dest="target/" />
		<unzip src="target/roboconf-web-administration-snapshot.zip" dest="target/roboconf-web-administration-dist/" />
	</target>

	<!-- Get a release -->
	<target name="target.get.release" unless="roboconf.snapshot" description="Downloading a released distribution...">
		<get src="https://dl.bintray.com/roboconf/roboconf-web-administration/all/roboconf-web-administration-${project.version}.zip" dest="target/" />
		<unzip src="target/roboconf-web-administration-${project.version}.zip" dest="target/roboconf-web-administration-dist/" />
	</target>

</project>
